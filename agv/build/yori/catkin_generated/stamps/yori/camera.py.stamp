#!/usr/bin/env python
import rospy
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
import cv2
class MyAGVCameraPublisher:
    def __init__(self):
        # ROS 노드 초기화
        rospy.init_node('myagv_camera_publisher', anonymous=True)
        # 이미지 발행 토픽 생성
        self.publisher = rospy.Publisher('myagv/camera/image_raw', Image, queue_size=10)
        # OpenCV-ROS 브릿지 생성
        self.bridge = CvBridge()
        # OpenCV 카메라 초기화 (MyAGV의 카메라가 /dev/video0에 연결되어 있다고 가정)
        self.cap = cv2.VideoCapture(0)  # 0번 카메라 장치 사용
        if not self.cap.isOpened():
            rospy.logerr("Failed to open camera!")
            return
        # 루프 주기 설정
        self.rate = rospy.Rate(10)  # 10 Hz
    def publish_image(self):
        while not rospy.is_shutdown():
            ret, frame = self.cap.read()  # 카메라에서 프레임 읽기
            if not ret:
                rospy.logerr("Failed to capture image!")
                continue
            # OpenCV 이미지를 ROS 메시지로 변환
            msg = self.bridge.cv2_to_imgmsg(frame, encoding='bgr8')
            # 메시지 발행
            self.publisher.publish(msg)
            rospy.loginfo("Published image.")
            # 주기 설정
            self.rate.sleep()
    def shutdown(self):
        # 노드 종료 시 카메라 자원 해제
        self.cap.release()
        rospy.loginfo("Shutting down MyAGV Camera Publisher...")
if __name__ == '__main__':
    try:
        camera_publisher = MyAGVCameraPublisher()
        camera_publisher.publish_image()
    except rospy.ROSInterruptException:
        pass
